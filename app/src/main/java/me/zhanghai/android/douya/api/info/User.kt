/*
 * Copyright (c) 2020 Hai Zhang <dreaming.in.code.zh@gmail.com>
 * All Rights Reserved.
 */

package me.zhanghai.android.douya.api.info

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

@JsonClass(generateAdapter = true)
data class User(
    // IUserAbstract
    @Json(name = "abstract")
    override val abstractIntro: String = "",
    override val avatar: String = "",
    override val birthday: String = "",
    @Json(name = "follow_source")
    override val followSource: String = "",
    override val gender: String = "",
    override val id: String = "",
    override val intro: String = "",
    @Json(name = "large_avatar")
    override val largeAvatar: String = "",
    override val name: String = "",
    @Json(name = "sharing_url")
    override val shareUri: String = "",
    @Json(name = "kind")
    override val type: String = "",
    override val uid: String = "",
    override val uri: String = "",
    override val url: String = "",
    @Json(name = "verify_reason")
    override val verifyReason: String = "",
    @Json(name = "verify_type")
    override val verifyType: Int = 0,

    val alias: String = "",
    @Json(name = "ark_published_count")
    val arkPublishedCount: Int = 0,
    @Json(name = "badge_count")
    val badgeCount: Int = 0,
    @Json(name = "book_collected_count")
    val bookCollectedCount: Int = 0,
    @Json(name = "can_donate")
    val canDonate: Boolean = false,
    @Json(name = "can_set_original")
    val canSetOriginal: Boolean = false,
    @Json(name = "collected_subjects_count")
    val collectedSubjectsCount: Int = 0,
    @Json(name = "photo_albums_count")
    val countAlbums: Int = 0,
    @Json(name = "following_doulist_count")
    val countDouListFollowing: Int = 0,
    @Json(name = "owned_doulist_count")
    val countDouListOwner: Int = 0,
    @Json(name = "followers_count")
    val countFollowers: Int = 0,
    @Json(name = "display_followers_count")
    val countFollowersStr: String = "",
    @Json(name = "following_count")
    val countFollowing: Int = 0,
    @Json(name = "dramas_count")
    val dramasCount: Int = 0,
    val email: String = "",
    @Json(name = "enable_disturb_free")
    val enableDisturbFree: Boolean = false,
    @Json(name = "user_hot_module_enabled")
    val enableHotModule: Boolean = false,
    @Json(name = "enable_wishlist_notification")
    val enableWishlistNotification: Boolean = false,
    @Json(name = "fanta_enabled")
    val fantaEnabled: Boolean = false,
    val followed: Boolean = false,
    @Json(name = "gallery_topics_count")
    val galleryTopicsCount: Int = 0,
    @Json(name = "group_chat_count")
    val groupChatCount: Int = 0,
    @Json(name = "has_user_hot_module")
    val hasHotModule: Boolean = false,
    @Json(name = "has_opened_archives")
    val hasOpenedArchives: Boolean = false,
    @Json(name = "has_password")
    val hasPassword: Boolean = false,
    @Json(name = "has_set_profile")
    val hasSetProfile: Boolean = false,
    @Json(name = "in_blacklist")
    val inBlackList: Boolean = false,
    @Json(name = "is_abnormal")
    val isAbnormal: Boolean = false,
    @Json(name = "is_banned")
    val isBanned: Boolean = false,
    @Json(name = "is_normal")
    val isNormal: Boolean = false,
    @Json(name = "is_phone_bound")
    val isPhoneBound: Boolean = false,
    @Json(name = "is_phone_verified")
    val isPhoneVerified: Boolean = false,
    @Json(name = "is_readonly")
    val isReadOnly: Boolean = false,
    @Json(name = "is_subject_noviciate")
    val isSubjectNoviciate: Boolean = false,
    @Json(name = "is_wechat_bound")
    val isWeChatBound: Boolean = false,
    @Json(name = "is_weibo_bound")
    val isWeiboBound: Boolean = false,
    @Json(name = "joined_group_count")
    val joinedGroupCount: Int = 0,
    @Json(name = "last_visit_time")
    val lastVisitTime: String = "",
    @Json(name = "listeners_count")
    val listenersCount: Int = 0,
    @Json(name = "loc_name")
    val locationName: String = "",
    @Json(name = "loc")
    val location: Location? = null,
    @Json(name = "medal_groups")
    val medals: List<UserMedal> = emptyList(),
    @Json(name = "message_count")
    val messageCount: Int = 0,
    @Json(name = "movie_collected_count")
    val movieCollectedCount: Int = 0,
    @Json(name = "music_collected_count")
    val musicCollectedCount: Int = 0,
    @Json(name = "need_community_exam")
    val needCommunityExam: Boolean = false,
    @Json(name = "niffler_columns_count")
    val nifflerColumnsCount: Int = 0,
    @Json(name = "notes_count")
    val notesCount: Int = 0,
    val notifications: String = "",
    @Json(name = "owned_events_count")
    val ownedEventsCount: Int = 0,
    @Json(name = "phone_number")
    val phoneNumber: String = "",
    @Json(name = "profile_banner")
    val profileBanner: ProfileImage? = null,
    @Json(name = "readonly_message")
    val readOnlyMessage: String = "",
    @Json(name = "readers_count")
    val readersCount: Int = 0,
    @Json(name = "reg_time")
    val registerTime: String = "",
    val remark: String = "",
    @Json(name = "reviews_count")
    val reviewsCount: Int = 0,
    @Json(name = "show_audience_count")
    val showAudienceCount: Boolean = false,
    @Json(name = "show_cart")
    val showCart: Boolean = false,
    @Json(name = "show_fanta")
    val showFanta: Boolean = false,
    @Json(name = "statuses_count")
    val statusCount: Int = 0,
    @Json(name = "subscribe_niffler_columns_count")
    val subscribeNifflerColumnsCount: Int = 0,
    @Json(name = "tags_count")
    val tagsCount: Int = 0,
    @Json(name = "total_reviews")
    val totalReviews: Int = 0,
    @Json(name = "total_wish")
    val totalWish: Int = 0,
    @Json(name = "verify_name")
    val verifyName: String = "",
    @Json(name = "verify_roles")
    val verifyRoles: List<String> = emptyList(),
    @Json(name = "verify_works_count")
    val verifyWorksCount: Int = 0,
    @Json(name = "viewers_count")
    val viewersCount: Int = 0,
    @Json(name = "wechat_name")
    val weChatName: String = "",
    @Json(name = "weibo_name")
    val weiboName: String = ""
) : IUserAbstract
